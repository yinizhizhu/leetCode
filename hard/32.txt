int longestValidParentheses(char* s)
{
    int len = strlen(s);
    int max = 0, tmp, i, head=0, tail=len-1;
    
    if(len < 2)
        return 0;
    
    int *maxs = (int*)malloc(sizeof(int)*len); //record the max viable length ending with the current;
    memset(maxs, 0, len*sizeof(int));

    for(i=1; i<len; i++)
    {
        if(s[i] == ')')
        {
            tmp = i-maxs[i-1];
            if(s[i-1] == '(')
                    maxs[i] = 2 + (i > 1 ? maxs[i-2] : 0);
            else if(s[tmp-1] == '(')
                    maxs[i] = 2 + maxs[i-1] + (tmp > 0 ? maxs[tmp-2] : 0);
            tmp = maxs[i];
            max = (max > tmp ? max : tmp);
        }
    }
    return max;
}