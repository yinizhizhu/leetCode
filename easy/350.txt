class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        vector<int> result;
        int i, len = nums1.size();
        map<int, int> containerA, containerR;
        map<int, int>::iterator tmp, tmp1;
        for (i=0; i<len; i++)
        {
            tmp = containerA.find(nums1[i]);
            if (tmp == containerA.end())
                containerA.insert(map<int, int>::value_type(nums1[i], 1));
            else
                tmp->second++;
        }
        len = nums2.size();
        for (i=0; i<len; i++)
        {
            tmp = containerA.find(nums2[i]);
            if (tmp != containerA.end() && tmp->second > 0)
            {
                tmp1 = containerR.find(nums2[i]);
                if (tmp1 == containerR.end())
                    containerR.insert(map<int, int>::value_type(nums2[i], 1));
                else
                    tmp1->second++;
                tmp->second--;
            }
        }
        tmp = containerR.begin();
        for (; tmp!=containerR.end(); tmp++)
            for (i=0; i<tmp->second; i++)
                result.push_back(tmp->first);
        return result;
    }
};