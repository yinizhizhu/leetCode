class Solution
{
public:
    vector<vector<int>> threeSum(vector<int>& nums)
    {
        vector<vector<int>> ret;
        int n = nums.size();
        if (n < 3)
            return ret;
        sort(nums.begin(), nums.end());
        int i, left, right, target = 0;
        for (i = 0; i < n-2; ++i)
        {
            if (nums[i] > 0)
                break;
            if (i != 0 && nums[i] == nums[i-1])
                continue;
            target = 0 - nums[i];
            left = i + 1;
            right = n - 1;

            while (left < right)
            {
                if ((nums[left] + nums[right]) == target)
                {
                    ret.push_back(vector<int>{nums[i], nums[left], nums[right]});
                    while (left < right && nums[left+1] == nums[left])
                        ++left;
                    while (left < right && nums[right-1] == nums[right])
                        --right;
                    ++left;
                    --right;
                }
                else if ((nums[left] + nums[right]) < target)
                    ++left;
                else
                    --right;
            }
        }
        return ret;
    }
};