class Solution {
public:
	int counter(TreeNode* root) {
		if (root)
			return (counter(root->left) + counter(root->right) + 1);
		return 0;
	}
	TreeNode* find(TreeNode* root, int x) {
		if (root) {
			if (root->val == x) return root;
			TreeNode* ans = find(root->left, x);
			if (ans) return ans;
			ans = find(root->right, x);
			return ans;
		}
		return NULL;
	}
	bool btreeGameWinningMove(TreeNode* root, int n, int x) {
		TreeNode* cur = find(root, x);
		int left = counter(cur->left);
		int right = counter(cur->right);
		int parent = n - left - right - 1;
		n >>= 1;
		if (left > n || right > n || parent > n) return true;
		return false;
	}
};