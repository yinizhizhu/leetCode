/**
 * Return an array of size *returnSize.
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* productExceptSelf(int* nums, int numsSize, int* returnSize) {
    int mul = 1, i;
    int index=-1, zero=0;
    
    int *result = (int*)malloc(numsSize*sizeof(int));
    *returnSize = numsSize;
    
    for (i=0; i<numsSize; i++)
    {
        if (nums[i] == 0)
        {
            zero++;
            if (zero == 1)
                index = i;
        }
        else
            mul *= nums[i];
        result[i] = 0;
    }
    if (zero > 1)
        return result;
    else if (zero == 1)
        result[index] = mul;
    else
    {
        for (i=0; i<numsSize; i++)
            result[i] = mul/nums[i];
    }
    return result;
}