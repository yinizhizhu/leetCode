bool cmp(string& a, string& b) {
	return a.size() < b.size();
}
class Solution {
public:
	bool check(string& a, string& b) {
		int n = a.size(), m = b.size();
		if (n != m - 1) return false;
		int i = 0, j = 0, gap = 1;
		for (; i < n && j < m; i++, j++)
			if (a[i] != b[j]) {
				j += gap;
				gap -= gap;
				if (a[i] != b[j])
					return false;
			}
		return true;
	}
	int longestStrChain(vector<string>& words) {
		int n = words.size(), i, j;
		vector<int> con(n, 1);
		string a, b;
		sort(words.begin(), words.end(), cmp);
		for (i = 1; i < n; i++) {
			b = words[i];
			for (j = 0; j < i; j++) {
				a = words[j];
				if (check(a, b))
					con[i] = max(con[i], con[j] + 1);
			}
		}
		i = 1;
		for (auto c : con) i = max(i, c);
		return i;
	}
};