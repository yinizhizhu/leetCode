/**
 * Return an array of size *returnSize.
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* singleNumber(int* nums, int numsSize, int* returnSize) {
    if (!nums || (numsSize < 2))
        return NULL;
    int* ret = (int*)malloc(sizeof(int) * 2);
    int i, x = 0, y = 0, flag, temp;
    for (i = 0; i < numsSize; i++)
        x ^= nums[i];
    flag = x & -x;  //Get the first different bit bettween 'a' and 'b'('a' and 'b' is the two different numbers).
    for (i = 0; i < numsSize; i++)
        if ((temp = nums[i]) & flag)
            y ^= temp;
    ret[0] = x ^ y;
    ret[1] = y;
    *returnSize = 2;
    return ret;
}