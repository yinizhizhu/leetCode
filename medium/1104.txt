class Solution {
public:
    int deep2(int n) {
        return ceil(log(n+1)/log(2));
    }
    int deep(int n) {
        int ans = 1;
        for (; ((1<<ans)-1) < n; ans++);
        return ans;
    }
    vector<int> pathInZigZagTree(int label) {
        int n = deep(label), left;
        vector<int> ans;
        ans.push_back(label);
        if (n % 2 == 0) label=3*(1<<(n-1))-label-1;
        for (label>>=1, n--; label; label>>=1, n--) {
            if (n % 2) ans.push_back(label);
            else  {
                if (n >= 0) ans.push_back(3*(1<<(n-1))-label-1);
                else ans.push_back(label);
            }
        }
        reverse(ans.begin(), ans.end());
        return ans;
    }
};

