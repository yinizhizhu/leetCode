class Solution {
public:
	int max(int a, int b) { return (a > b ? a : b); }
	int movesToMakeZigzag(vector<int>& nums) {
		int ans1 = 0, ans2 = 0, i, n = nums.size();
		vector<int> nums1(n, 0), nums2(n, 0);
		for (i = 0; i < n; i++) nums1[i] = nums2[i] = nums[i];
		for (i = 0; i < n; i++) {
			cout << nums1[i] << " " << nums2[i] << endl;
		}
		for (i = 0; i < n; i += 2) {
			if (i + 1 < n && nums1[i] <= nums1[i + 1]) {
				ans1 += nums1[i + 1] - nums1[i] + 1;
				nums1[i + 1] = nums1[i] - 1;
			}
			if (i - 1 >= 0 && nums1[i] <= nums1[i - 1]) {
				ans1 += nums1[i - 1] - nums1[i] + 1;
			}
		}
		for (i = 0; i < n; i += 2) {
			if (i + 1 < n && nums2[i] >= nums2[i + 1]) {
				ans2 += nums2[i + 1] - nums2[i] + 1;
				nums2[i] = nums2[i + 1] - 1;
			}
			if (i - 1 >= 0 && nums2[i] >= nums2[i - 1]) {
				ans2 += nums2[i - 1] - nums2[i] + 1;
			}
		}
		cout << ans1 << " " << ans2 << endl;
		return (ans1 > ans2 ? ans2 : ans1);
	}
};
