const int N = 501;
int dp[N][N], sum[N];
class Solution {
public:
	bool stoneGame(vector<int>& piles) {
		int n = piles.size(), i, j;
		sum[1] = piles[0], sum[0] = 0;
		dp[1][1] = sum[1], dp[0][0] = 0;
		for (i = 1; i < n; i++) {
			sum[i + 1] = sum[i] + piles[i];
			dp[i + 1][i + 1] = piles[i];
		}
		for (i = 1; i < n; i++)
			for (j = 1; j <= n - i; j++)
				dp[j][j + i] = max(piles[j-1] + sum[j + i] - sum[j] - dp[j + 1][j + i],
					piles[j+i-1] + sum[j + i - 1] - sum[j - 1] - dp[j][j + i - 1]);
		if (dp[1][n] > (sum[n] >> 1)) return true;
		return false;
	}
};
