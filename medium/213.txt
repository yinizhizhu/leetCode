class Solution {
public:
    int rob(vector<int>& nums) {
        int len = nums.size();
        if (len < 1)
            return 0;
        else if (len == 1)
            return nums[0];
        else if (len == 2)
            return (nums[0] > nums[1] ? nums[0] : nums[1]);
        int result[2], j;
        for (j=0; j<2; j++)
        {
            result[j] = help(nums, j, len-1+j);
        }
        return (result[0] > result[1] ? result[0] : result[1]);
    }
    int help(vector<int>& nums, int head, int tail)
    {
        int i, first, sec, thrid;
        first = nums[head];
        sec = (first > nums[head+1] ? first : nums[head+1]);
        for (i=head+2; i<tail; i++)
        {
            thrid = nums[i] + first;
            thrid = (thrid > sec ? thrid : sec);
            first = sec;
            sec = thrid;
        }
        return sec;
    }
};